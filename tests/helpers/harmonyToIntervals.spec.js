import harmonyToIntervals from '../../src/helpers/harmonyToIntervals';
import { chordParserFactory } from 'chord-symbol';
import d from '../allDegrees';

describe('harmonyToIntervals', () => {
	test('is a function', () => {
		expect(typeof harmonyToIntervals).toBe('function');
	});

	describe.each([
		['C', 'major'],
		['Cm', 'minor'],
		['C+', 'augmented'],
		['C°', 'diminished'],
		['C7', 'dominant'],
		['CM7', 'major-seventh'],
		['Cm7', 'minor-seventh'],
		['C°7', 'diminished-seventh'],
		['C+7', 'augmented-seventh'],
		['Ch', 'half-diminished'],
		['CmM7', 'major-minor'],
		['C6', 'major-sixth'],
		['Cm6', 'minor-sixth'],
		['C9', 'dominant-ninth'],
		['CM9', 'major-ninth'],
		['Cm9', 'minor-ninth'],
		['C11', 'dominant-11th'],
		['CM11', 'major-11th'],
		['Cm11', 'minor-11th'],
		['C13', 'dominant-13th'],
		['CM13', 'major-13th'],
		['Cm13', 'minor-13th'],
		['Csus2', 'suspended-second'],
		['Csus4', 'suspended-fourth'],
		/*
		['C', 'Neapolitan'],
		['C', 'Italian'],
		['C', 'French'],
		['C', 'German'],
		*/
		['C(bass)', 'other'],
		['C5', 'power'],
		/*
		['C', 'Tristan'],
		['C', 'other'],
		['C', 'none]'
		 */
		['C(add9)', 'major', [d.add9]],
		['C(add9,#11)', 'major', [d.add9, d.addx11]],
		['Cdim7(add ma7)', 'diminished-seventh', [d.addma7]],
		['C7(b9,#9,#11)', 'dominant', [d.alterb9, d.alterx9, d.alterx11]],

		// Chords symbols from: Contemporary Music Theory

		['C5', 'power', []],
		['C(omit3)', 'major', [d.omit3]],
		['Csus', 'suspended-fourth', []],
		['C(b5)', 'major', [d.alterb5]],
		['C', 'major', []],
		['C+', 'augmented', []],
		['C6(b5)', 'major-sixth', [d.alterb5]],
		['C6', 'major-sixth', []],
		['C6(#5)', 'major-sixth', [d.alterx5]],
		['C69', 'major-sixth', [d.add9]],
		['C69', 'major', [d.add6, d.add9]],
		['Cma6', 'major-sixth', []],
		['Cma69', 'major-sixth', [d.add9]],
		['Cma6(#5)', 'major-sixth', [d.alterx5]],
		['C69(#11)', 'major-sixth', [d.add9, d.alterx11]],
		['Cma7', 'major-seventh', []],
		['Cma7(#5)', 'major-seventh', [d.alterx5]],
		['Cadd9(omit3)', 'suspended-second', [d.add9, d.omit3]],
		['Cma6(b5)', 'major-sixth', [d.alterb5]],
		['Cadd9', 'major', [d.add9]],
		['C(add9)', 'major', [d.add9]],
		['Cma9', 'major-ninth', []],
		['Cma7(b5)', 'major-seventh', [d.alterb5]],
		['Cma9(no3)', 'major-ninth', [d.omit3]],
		['Cma9(#11)', 'major-ninth', [d.alterx11]],
		['Cma9(omit3)', 'major-ninth', [d.omit3]],
		['Cadd9(no3)', 'major', [d.add9, d.omit3]],
		['C°', 'diminished', []],
		['Cmi', 'minor', []],
		['Cmi add9', 'minor', [d.add9]],
		['Cma13(#11)', 'major-13th', [d.alterx11]],
		['Cmi6', 'minor-sixth', []],
		['Cmi(add9)', 'minor', [d.add9]],
		['Cmi69(add11)', 'minor-sixth', [d.add9, d.add11]],
		['Cmi(#5)', 'minor', [d.alterx5]],
		['Cmi7', 'minor-seventh', []],
		['Cmi7(b5)', 'minor-seventh', [d.alterb5]],
		['Cma13', 'major-13th', []],
		['Cmi7(b5,#5)', 'minor-seventh', [d.alterb5, d.alterx5]],
		['Cmi7(b5,add11)', 'minor-seventh', [d.alterb5, d.add11]],
		['Cmi7(add11)', 'minor-seventh', [d.add11]],
		['Cmi9', 'minor-ninth', []],
		['Cmi7(#5)', 'minor-seventh', [d.alterx5]],
		['Cmi11', 'minor-11th', []],
		['Cmi9(b5)', 'minor-ninth', [d.alterb5]],
		['Cmi11(b5)', 'minor-11th', [d.alterb5]],
		['Cmi69', 'minor-sixth', [d.add9]],
		['Cmi11(b5,b13)', 'minor-11th', [d.alterb5, d.alterb13]],
		['Cmi11(b5,no3)', 'minor-11th', [d.alterb5, d.omitb3]],
		['Cmi11(b5,#5)', 'minor-11th', [d.alterb5, d.alterx5]],
		['Cmi13', 'minor-13th', []],
		['CmiMa9', 'major-minor', [d.add9]],
		['CmiMa9(add13)', 'major-minor', [d.add9, d.add13]], // missing kind: 'major-minor-ninth'
		['CmiMa11', 'major-minor', [d.add9, d.add11]], // missing kind: 'major-minor-11th'
		['CmiMa13', 'major-minor', [d.add9, d.add11, d.add13]], // missing kind: 'major-minor-13th'
		['C7', 'dominant', []],
		['CmiMa7', 'major-minor', []],
		['C7sus(b9)', 'dominant', [d.omit3, d.add4, d.alterb9]],
		['C7(b5)', 'dominant', [d.alterb5]],
		['C7(b5,#9)', 'dominant', [d.alterb5, d.alterx9]],
		['C7(b5,#5,b9)', 'dominant', [d.alterb5, d.alterx5, d.alterb9]],
		['C7(b5,#5,#9)', 'dominant', [d.alterb5, d.alterx5, d.alterx9]],
		[
			'C7(b5,#5,b9,#9)',
			'dominant',
			[d.alterb5, d.alterx5, d.alterb9, d.alterx9],
		],
		[
			'C7(b5,#5,b9,#9,b13)',
			'dominant',
			[d.alterb5, d.alterx5, d.alterb9, d.alterx9, d.alterb13],
		],
		['C7(b5,b9,b13)', 'dominant', [d.alterb5, d.alterb9, d.alterb13]],
		['C7(b5,b9,#9)', 'dominant', [d.alterb5, d.alterb9, d.alterx9]],
		['C7(b5,#5)', 'dominant', [d.alterb5, d.alterx5]],
		['C7sus', 'dominant', [d.omit3, d.add4]],
		['C7(b5,b9)', 'dominant', [d.alterb5, d.alterb9]],
		['C7(b5,#9,b13)', 'dominant', [d.alterb5, d.alterx9, d.alterb13]],
		['C7(b5,b13)', 'dominant', [d.alterb5, d.alterb13]],
		['C7(#5)', 'dominant', [d.alterx5]],
		['C7(#5,b9)', 'dominant', [d.alterx5, d.alterb9]],
		['C7(#5,#9)', 'dominant', [d.alterx5, d.alterx9]],
		['C7(#5,b9,#9)', 'dominant', [d.alterx5, d.alterb9, d.alterx9]],
		['C7(#5,b9,#11)', 'dominant', [d.alterx5, d.alterb9, d.alterx11]],
		['C7(#5,#9,#11)', 'dominant', [d.alterx5, d.alterx9, d.alterx11]],
		[
			'C7(#5,b9,#9,#11)',
			'dominant',
			[d.alterx5, d.alterb9, d.alterx9, d.alterx11],
		],
		['C7(#5, #11)', 'dominant', [d.alterx5, d.alterx11]],
		['C7(b9)', 'dominant', [d.alterb9]],
		['C7(b9,#9)', 'dominant', [d.alterb9, d.alterx9]],
		['C7(b9,#11)', 'dominant', [d.alterb9, d.alterx11]],
		['C7(b9,#9,#11)', 'dominant', [d.alterb9, d.alterx9, d.alterx11]],
		['C7(b9,#9,b13)', 'dominant', [d.alterb9, d.alterx9, d.alterb13]],
		[
			'C7(b9,#9,#11,b13)',
			'dominant',
			[d.alterb9, d.alterx9, d.alterx11, d.alterb13],
		],
		['C7(b9,#11,b13)', 'dominant', [d.alterb9, d.alterx11, d.alterb13]],
		['C7(b9,b13)', 'dominant', [d.alterb9, d.alterb13]],
		['C7(#9)', 'dominant', [d.alterx9]],
		['C7(#9,#11)', 'dominant', [d.alterx9, d.alterx11]],
		['C7(#9,b13)', 'dominant', [d.alterx9, d.alterb13]],
		['C7(#9,#11,b13)', 'dominant', [d.alterx9, d.alterx11, d.alterb13]],
		['C7(#11)', 'dominant', [d.alterx11]],
		['C7(#11,b13)', 'dominant', [d.alterx11, d.alterb13]],
		['C7(b13)', 'dominant', [d.alterb13]],
		['C9', 'dominant-ninth', []],
		['C9(13)', 'dominant-ninth', [d.add13]],
		['C9(add13)', 'dominant-ninth', [d.add13]],
		['C9sus', 'dominant-ninth', [d.omit3, d.add4]],
		['C9(b5)', 'dominant-ninth', [d.alterb5]],
		['C9(b5,#5)', 'dominant-ninth', [d.alterb5, d.alterx5]],
		['C9(b5,b13)', 'dominant-ninth', [d.alterb5, d.alterb13]],
		['C9(#5,#11)', 'dominant-ninth', [d.alterx5, d.alterx11]],
		['C9(#11)', 'dominant-ninth', [d.alterx11]],
		['C9(#11,b13)', 'dominant-ninth', [d.alterx11, d.alterb13]],
		['C11', 'dominant-11th', []],
		['C11(b9)', 'dominant-11th', [d.alterb9]],
		['C13', 'dominant-13th', []],
		['C13sus', 'dominant-13th', [d.omit3, d.add4]],
		['C13(b5)', 'dominant-13th', [d.alterb5]],
		['C13(b5,b9)', 'dominant-13th', [d.alterb5, d.alterb9]],
		['C13(b5,#9)', 'dominant-13th', [d.alterb5, d.alterx9]],
		['C13(b5,b9,#9)', 'dominant-13th', [d.alterb5, d.alterb9, d.alterx9]],
		['C13(b9)', 'dominant-13th', [d.alterb9]],
		['C13(b9,#9)', 'dominant-13th', [d.alterb9, d.alterx9]],
		['C13(b9,#11)', 'dominant-13th', [d.alterb9, d.alterx11]],
		['C13(b9,#9,#11)', 'dominant-13th', [d.alterb9, d.alterx9, d.alterx11]],
		['C13(#9)', 'dominant-13th', [d.alterx9]],
		['C13(#9,#11)', 'dominant-13th', [d.alterx9, d.alterx11]],
		['C13(#11)', 'dominant-13th', [d.alterx11]],
		['Cdim', 'diminished', []],
		['Cdim7', 'diminished-seventh', []],
		['Cdim7(add ma7)', 'diminished-seventh', [d.addma7]],
		['Cdim7(add ma7,9)', 'diminished-seventh', [d.addma7, d.add9]],
		[
			'Cdim7(add ma7,9,11)',
			'diminished-seventh',
			[d.addma7, d.add9, d.add11],
		],
		[
			'Cdim7(add ma7,9,11,b13)',
			'diminished-seventh',
			[d.addma7, d.add9, d.add11, d.addb13],
		],
		['Cdim7(add ma7,11)', 'diminished-seventh', [d.addma7, d.add11]],
		[
			'Cdim7(add ma7,11,b13)',
			'diminished-seventh',
			[d.addma7, d.add11, d.addb13],
		],
		[
			'Cdim7(add ma7,9,b13)',
			'diminished-seventh',
			[d.addma7, d.add9, d.addb13],
		],
		['Cdim7(add ma7,b13)', 'diminished-seventh', [d.addma7, d.addb13]],
		['Cdim7(add 9)', 'diminished-seventh', [d.add9]],
		['Cdim7(add 9,11)', 'diminished-seventh', [d.add9, d.add11]],
		[
			'Cdim7(add 9,11,b13)',
			'diminished-seventh',
			[d.add9, d.add11, d.addb13],
		],
		['Cdim7(add 9,b13)', 'diminished-seventh', [d.add9, d.addb13]],
		['Cdim7(add 11)', 'diminished-seventh', [d.add11]],
		['Cdim7(add 11,b13)', 'diminished-seventh', [d.add11, d.addb13]],
		['Cdim7(add b13)', 'diminished-seventh', [d.addb13]],

		// Chords symbols from: The New Real Book vol1

		['C bass', 'other', []],
		['C', 'major', []],
		['CSUS', 'suspended-fourth', []],
		['C+', 'augmented', []],
		['C6', 'major-sixth', []],
		['C6/9', 'major-sixth', [d.add9]],
		['CMA7(b5)', 'major-seventh', [d.alterb5]],
		['C#MA7SUS(b5)', 'major-seventh', [d.omit3, d.add4, d.alterb5]],
		['CMA7', 'major-seventh', []],
		['CMA7(#5)', 'major-seventh', [d.alterx5]],
		['CMA7(#11)', 'major-seventh', [d.alterx11]],
		['C(add 9,omit 3)', 'suspended-second', [d.omit3, d.add9]],
		['C(add 9)', 'major', [d.add9]],
		['CMA9', 'major-ninth', []],
		['CMA9(#11)', 'major-ninth', [d.alterx11]],
		['CMA7(add 13)', 'major-seventh', [d.add13]],
		['CMA13', 'major-13th', []],
		['CMA13(#11)', 'major-13th', [d.addx11]],
		['Bb(add 9,add b13)', 'major', [d.add9, d.addb13]],
		['A+(add b9,add #9)', 'augmented', [d.addb9, d.addx9]],
		['CMI7', 'minor-seventh', []],
		['CMI7(omit 5)', 'minor-seventh', [d.omit5]],
		['CMI9', 'minor-ninth', []],
		['CMI11', 'minor-11th', []],
		['CMI7(add 11)', 'minor-seventh', [d.add11]],
		['CMI13', 'minor-13th', []],
		['CMI7(add 13)', 'minor-seventh', [d.add13]],
		['G#MI7(add 11, omit 5)', 'minor-seventh', [d.add11, d.omit5]],
		['Cdim.', 'diminished', []],
		['CMI7(b5)', 'minor-seventh', [d.alterb5]],
		['CMI9(b5)', 'minor-ninth', [d.alterb5]],
		['CMI11(b5)', 'minor-11th', [d.alterb5]],
		['CMI', 'minor', []],
		['CMI6', 'minor-sixth', []],
		['CMI(MA7)', 'major-minor', []],
		['CMI(add9)', 'minor', [d.add9]],
		['CMI6/9', 'minor-sixth', [d.add9]],
		['C7', 'dominant', []],
		['C7(omit 3)', 'dominant', [d.omit3]],
		['C9', 'dominant-ninth', []],
		['C13', 'dominant-13th', []],
		['C7SUS', 'dominant', [d.omit3, d.add4]],
		['F#7SUS(add 3)', 'dominant', [d.omit3, d.add3, d.add4]],
		['C9SUS', 'dominant-ninth', [d.omit3, d.add4]],
		['C13SUS', 'dominant-13th', [d.omit3, d.add4]],
		['C7(b5)', 'dominant', [d.alterb5]],
		['C7(b5,b9)', 'dominant', [d.alterb5, d.alterb9]],
		['C9(b5)', 'dominant-ninth', [d.alterb5]],
		['C13(b5)', 'dominant-13th', [d.alterb5]],
		['C7(#11)', 'dominant', [d.alterx11]],
		['C9(#11)', 'dominant-ninth', [d.alterx11]],
		['C13(#11)', 'dominant-13th', [d.alterx11]],
		['C7(b9)', 'dominant', [d.alterb9]],
		['C7(#9)', 'dominant', [d.alterx9]],
		['C7(b9,#11)', 'dominant', [d.alterb9, d.alterx11]],
		['C7(#9,#11)', 'dominant', [d.alterx9, d.alterx11]],
		['C7SUS(b9)', 'dominant', [d.omit3, d.add4, d.alterb9]],
		['C13SUS(b9)', 'dominant-13th', [d.omit3, d.add4, d.alterb9]],
		['C13(b9)', 'dominant-13th', [d.alterb9]],
		['C13(#11)', 'dominant-13th', [d.alterx11]],
		['C7(#5)', 'dominant', [d.alterx5]],
		['C7(#5,b9)', 'dominant', [d.alterx5, d.alterb9]],
		['C7(#5,#9)', 'dominant', [d.alterx5, d.alterx9]],
		['C9(#5)', 'dominant-ninth', [d.alterx5]],
		['C°7', 'diminished-seventh', []],
		['C°7(add MA7)', 'diminished-seventh', [d.addma7]],
		['C/E', 'major', []],
		['C/G', 'major', []],
		['E/C', 'major', []],
		['Bb/C', 'major', []],
		['C(add 9)/E', 'major', [d.add9]],
		['F/F#', 'major', []],
		['E+/G', 'augmented', []],
		['G7SUS/A', 'dominant', [d.omit3, d.add4]],
		['GMA7(#5)/F#', 'major-seventh', [d.alterx5]],
		['EbMA7(#5)/F', 'major-seventh', [d.alterx5]],
		['BMA7SUS/F#', 'major-seventh', [d.omit3, d.add4]],
	])('%s - %s', (symbol, kind, allDegrees) => {
		test(
			'should yield the same intervals as chord symbol having parsed ' +
				symbol,
			() => {
				const parseChord = chordParserFactory();
				const parsed = parseChord(symbol);
				const intervals = harmonyToIntervals(kind, allDegrees);

				expect(intervals).toEqual(parsed.normalized.intervals);
			}
		);
	});
});
